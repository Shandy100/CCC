/*
Assume 1 = A, 2 = B, 3 = C... 26 = Z and so on. Given a string of integers find out all the possible words that can made out of it in continuous order. For example take 1112. 1112 can be taken as (1)(1)(1)(2) = AAAB (11)(1)(2) = KAB (1)(11)(2) = AKB (1)(1)(12) = AAL ans so on.

print all the possible words that can be made out of it in ascending order.

Input Format

Only one number N.

Constraints

1 <= N <= 10^6

Output Format

Output all the words with one word one one line in ascending order.

Sample Input 0

112
Sample Output 0

AAB
AL
KB
*/


#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
void find(char *a,int i,int n)
{static char s[10]="";
    static int j=0;
 if(i==n)
 {
     printf("%s\n",s);return;
 }
int x=a[i]-48;
 if(x>0)
 {
     s[j++]=x+64;
     s[j]='\0';
     find(a,i+1,n);
     j--;
     if(i<n-1)
     {
         x=(a[i]-48)*10+a[i+1]-48;
         if(x<=26)
         {
             s[j++]=x+64;
             s[j]='\0';
             find(a,i+2,n);
             j--;
         }
             
     }
 }
}
int main() {

        char ch[10]; 
        scanf("%s",ch);
        find(ch,0,strlen(ch));
      return 0;
}

