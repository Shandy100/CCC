Are they Pangrams

//C++14
//Function
string isPangram(vector<string> pangram) {
    string result="";
    for(auto i=0;i<pangram.size();i++)
    {
        string s=pangram[i];
        sort(s.begin(), s.end());
        int pos=0, flag=0;
        for(int j=97;j<=122;j++)
        {
            flag=0;
            for(int k=pos;k<s.length();k++)
            {
                if(s[k]==(char)j)
                {
                    flag=1;
                    pos=k+1;
                    break;
                }
            }
            if(flag==0)
            break;
        }
        if(flag==0)
            result= result+"0";
        else {
        result= result+"1";
        }
    }
    return result;
}

//C++14
//Bit Logic
#include <bits/stdc++.h>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);



/*
 * Complete the 'maxXor' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts following parameters:
 *  1. INTEGER lo
 *  2. INTEGER hi
 *  3. INTEGER k
 */

int maxXor(int lo, int hi, int k) 
{
    int s,max=0,i,j;
    for(i=lo;i<=hi;i++)
    {
        for(j=lo;j<=hi;j++)
        {
            s=i^j;
            if(max<s&&s<=k)
            max=s;
        }
    }
    return max;

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string lo_temp;
    getline(cin, lo_temp);

    int lo = stoi(ltrim(rtrim(lo_temp)));

    string hi_temp;
    getline(cin, hi_temp);

    int hi = stoi(ltrim(rtrim(hi_temp)));

    string k_temp;
    getline(cin, k_temp);

    int k = stoi(ltrim(rtrim(k_temp)));

    int result = maxXor(lo, hi, k);

    fout << result << "\n";

    fout.close();

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}

//Bit Logic Function
//C++14

int maxXor(int lo, int hi, int k) {
int s,max=0,i,j;
for(i=lo;i<=hi;i++)
{
    for(j=lo;j<=hi;j++)
    {
        s=i^j;
        if(max<s&&s<=k)
        max=s;
    }
}

#Ad rotation
#Function
#Python
def complement(x):
    x = x.replace("0","2")
    x = x.replace("1", "0")
    x = x.replace("2", "1")
    return x
n=int(input())
x=bin(n).replace("0b", "")
y = complement(x)
print(int(y, 2))
